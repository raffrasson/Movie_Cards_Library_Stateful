{"version":3,"sources":["components/Header.jsx","components/SearchBar.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/Titulo.jsx","components/Subtitulo.jsx","components/Sinopse.jsx","components/Imagem .jsx","components/Avaliacao.jsx","components/Genero.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","SearchBar","this","props","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","data-testid","htmlFor","name","value","onChange","type","checked","Rating","rating","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","Titulo","handleClick","Subtitulo","Sinopse","defaultValue","Imagem","Avaliacao","Genero","genre","AddMovie","state","bind","movieMaker","target","setState","event","onClick","preventDefault","MovieLibrary","filmFilter","filter","includes","bookmarked","addHandler","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.163140cf.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends React.Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange,\n    } = this.props;\n    return (\n      <div>\n        <form className=\"searchForm\" data-testid=\"search-bar-form\">\n          <label htmlFor=\"search\" data-testid=\"text-input-label\">\n            Inclui o texto:\n            <input\n              name=\"search\"\n              value={ searchText }\n              onChange={ onSearchTextChange }\n              data-testid=\"text-input\"\n            />\n          </label>\n          <label htmlFor=\"bookmark\" data-testid=\"checkbox-input-label\">\n            Mostrar somente favoritos:\n            <input\n              name=\"bookmark\"\n              type=\"checkbox\"\n              checked={ bookmarkedOnly }\n              onChange={ onBookmarkedChange }\n              data-testid=\"checkbox-input\"\n            />\n          </label>\n          <label htmlFor=\"select\" data-testid=\"select-input-label\">\n            Filtrar por gênero\n            <select\n              name=\"genre\"\n              type=\"select\"\n              value={ selectedGenre }\n              onChange={ onSelectedGenreChange }\n              data-testid=\"select-input\"\n            >\n              <option data-testid=\"select-option\" value=\"\">Todos</option>\n              <option data-testid=\"select-option\" value=\"action\">Ação</option>\n              <option data-testid=\"select-option\" value=\"comedy\">Comédia</option>\n              <option data-testid=\"select-option\" value=\"thriller\">Suspense</option>\n            </select>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.string.isRequired,\n  onBookmarkedChange: PropTypes.string.isRequired,\n  bookmarkedOnly: PropTypes.string.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 'undefined',\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Titulo extends React.Component {\n  render() {\n    const { title, handleClick } = this.props;\n    return (\n      <label htmlFor=\"title\" data-testid=\"title-input-label\">\n        Título\n        <input\n          name=\"title\"\n          type=\"text\"\n          value={ title }\n          data-testid=\"title-input\"\n          onChange={ handleClick }\n        />\n      </label>\n    );\n  }\n}\n\nTitulo.propTypes = {\n  title: PropTypes.string.isRequired,\n  handleClick: PropTypes.string.isRequired,\n};\n\nexport default Titulo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Subtitulo extends React.Component {\n  render() {\n    const { subtitle, handleClick } = this.props;\n    return (\n      <label htmlFor=\"subtitle\" data-testid=\"subtitle-input-label\">\n        Subtítulo\n        <input\n          name=\"subtitle\"\n          type=\"text\"\n          value={ subtitle }\n          data-testid=\"subtitle-input\"\n          onChange={ handleClick }\n        />\n      </label>\n    );\n  }\n}\n\nSubtitulo.propTypes = {\n  subtitle: PropTypes.string.isRequired,\n  handleClick: PropTypes.string.isRequired,\n};\n\nexport default Subtitulo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Sinopse extends React.Component {\n  render() {\n    const { storyline, handleClick } = this.props;\n    return (\n      <label htmlFor=\"storyline\" data-testid=\"storyline-input-label\">\n        Sinopse\n        <textarea\n          name=\"storyline\"\n          type=\"text\"\n          value={ storyline }\n          onChange={ handleClick }\n          data-testid=\"storyline-input\"\n          defaultValue={ storyline }\n        />\n      </label>\n    );\n  }\n}\n\nSinopse.propTypes = {\n  storyline: PropTypes.string.isRequired,\n  handleClick: PropTypes.string.isRequired,\n};\n\nexport default Sinopse;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Imagem extends React.Component {\n  render() {\n    const { imagePath, handleClick } = this.props;\n    return (\n      <label htmlFor=\"image\" data-testid=\"image-input-label\">\n        Imagem\n        <input\n          name=\"image\"\n          alt=\"imagem do filme\"\n          value={ imagePath }\n          onChange={ handleClick }\n          data-testid=\"image-input\"\n        />\n      </label>\n    );\n  }\n}\n\nImagem.propTypes = {\n  imagePath: PropTypes.string.isRequired,\n  handleClick: PropTypes.string.isRequired,\n};\n\nexport default Imagem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Avaliacao extends React.Component {\n  render() {\n    const { rating, handleClick } = this.props;\n    return (\n      <label htmlFor=\"rating\" data-testid=\"rating-input-label\">\n        Avaliação\n        <input\n          name=\"rating\"\n          type=\"number\"\n          value={ rating }\n          data-testid=\"rating-input\"\n          onChange={ handleClick }\n        />\n      </label>\n    );\n  }\n}\n\nAvaliacao.propTypes = {\n  rating: PropTypes.number.isRequired,\n  handleClick: PropTypes.string.isRequired,\n};\n\nexport default Avaliacao;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Genero extends React.Component {\n  render() {\n    const { genre, handleClick } = this.props;\n    return (\n      <label htmlFor=\"genero\" data-testid=\"genre-input-label\">\n        Gênero\n        <select\n          data-testid=\"genre-input\"\n          name=\"genero\"\n          value={ genre }\n          onChange={ handleClick }\n        >\n          <option data-testid=\"genre-option\" value=\"action\">Ação</option>\n          <option data-testid=\"genre-option\" value=\"comedy\">Comédia</option>\n          <option data-testid=\"genre-option\" value=\"thriller\">Suspense</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nGenero.propTypes = {\n  genre: PropTypes.string.isRequired,\n  handleClick: PropTypes.string.isRequired,\n};\n\nexport default Genero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Titulo from './Titulo';\nimport Subtitulo from './Subtitulo';\nimport Sinopse from './Sinopse';\nimport Imagem from './Imagem ';\nimport Avaliacao from './Avaliacao';\nimport Genero from './Genero';\n\nclass AddMovie extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.movieMaker = this.movieMaker.bind(this);\n  }\n\n  handleClick({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  movieMaker(event) {\n    const { onClick } = this.props;\n    event.preventDefault();\n    onClick(this.state);\n    this.setState({\n      title: '',\n      subtitle: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  render() {\n    const {\n      subtitle,\n      title,\n      imagePath,\n      storyline,\n      rating,\n      genre } = this.state;\n    return (\n      <form data-testid=\"add-movie-form\">\n        <Titulo value={ title } handleClick={ this.handleClick } />\n        <Subtitulo value={ subtitle } handleClick={ this.handleClick } />\n        <Imagem value={ imagePath } handleClick={ this.handleClick } />\n        <Sinopse defaultValue={ storyline } handleClick={ this.handleClick } />\n        <Avaliacao rating={ rating } handleClick={ this.handleClick } />\n        <Genero value={ genre } handleClick={ this.handleClick } />\n\n        <button\n          type=\"button\"\n          data-testid=\"send-button\"\n          onClick={ this.movieMaker }\n        >\n          Adicionar filme\n        </button>\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.string.isRequired,\n};\n\nexport default AddMovie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.filmFilter = this.filmFilter.bind(this);\n    this.addHandler = this.addHandler.bind(this);\n  }\n\n  handleClick({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filmFilter = ({ searchText, selectedGenre, bookmarkedOnly, movies }) => movies\n    .filter((movie) => movie.title.includes(searchText)\n    || movie.subtitle.includes(searchText) || movie.storyline.includes(searchText))\n    .filter((movie) => (bookmarkedOnly ? movie.bookmarked : true))\n    .filter((movie) => (selectedGenre ? movie.genre === selectedGenre : true));\n\n  addHandler(movie) {\n    this.setState(({ movies }) => ({\n      movies: [...movies, movie],\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          searchText={ this.searchText }\n          onSearchTextChange={ this.handleClick }\n          bookmarkedOnly={ this.bookmarkedOnly }\n          onBookmarkedChange={ this.handleClick }\n          selectedGenre={ this.selectedGenre }\n          onSelectedGenreChange={ this.handleClick }\n        />\n        <MovieList movies={ this.filmFilter(this.state) } />\n        <AddMovie onClick={ this.addHandler } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.string.isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}